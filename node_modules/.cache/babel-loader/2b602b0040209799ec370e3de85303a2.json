{"remainingRequest":"/Users/taoliang/Desktop/homeX/ShopOA/node_modules/babel-loader/lib/index.js!/Users/taoliang/Desktop/homeX/ShopOA/node_modules/eslint-loader/index.js??ref--13-0!/Users/taoliang/Desktop/homeX/ShopOA/src/utils/http.js","dependencies":[{"path":"/Users/taoliang/Desktop/homeX/ShopOA/src/utils/http.js","mtime":1561600366000},{"path":"/Users/taoliang/Desktop/homeX/ShopOA/node_modules/cache-loader/dist/cjs.js","mtime":1561365392000},{"path":"/Users/taoliang/Desktop/homeX/ShopOA/node_modules/babel-loader/lib/index.js","mtime":1561365391000},{"path":"/Users/taoliang/Desktop/homeX/ShopOA/node_modules/eslint-loader/index.js","mtime":1561365393000}],"contextDependencies":[],"result":["'use strict';\n\nimport axios from 'axios'; // import qs from 'qs'\n\nvar qbaseUrl = 'http://admin.qiandengli.com';\nvar token = window.localStorage.getItem('token') || '';\naxios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\naxios.interceptors.request.use(function (config) {\n  // loading\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  return Promise.resolve(error.response);\n});\n\nfunction checkStatus(response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    return response; // 如果不需要除了data之外的数据，可以直接 return response.data\n  } else {\n    alert(response.message);\n    return;\n  } // 异常状态下，把错误信息返回去\n  // return {\n  //   status: -404,\n  //   msg: '网络异常'\n  // }\n\n}\n\nfunction checkCode(res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {\n    this.$message(res.msg);\n  } // if (res.data && (!res.data.success)) {\n  //   alert(res.data.error_msg)\n  // }\n\n\n  return res.data;\n}\n\nexport default {\n  post: function post(url, data) {\n    return axios({\n      method: 'post',\n      baseURL: \"\".concat(qbaseUrl),\n      url: url,\n      data: data,\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return checkStatus(response);\n    }).catch(function (res) {\n      return checkCode(res);\n    });\n  },\n  put: function put(url, data) {\n    return axios({\n      method: 'put',\n      baseURL: \"\".concat(qbaseUrl),\n      url: url,\n      data: data,\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return checkStatus(response);\n    }).catch(function (res) {\n      return checkCode(res);\n    });\n  },\n  get: function get(url, params) {\n    return new Promise(function (resolve, reject) {\n      axios.get(url, {\n        params: params\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (err) {\n        reject(err.data);\n      });\n    });\n  }\n};",{"version":3,"sources":["/Users/taoliang/Desktop/homeX/ShopOA/src/utils/http.js"],"names":["axios","qbaseUrl","token","window","localStorage","getItem","defaults","headers","common","interceptors","request","use","config","error","Promise","reject","response","resolve","checkStatus","status","alert","message","checkCode","res","$message","msg","data","post","url","method","baseURL","timeout","then","catch","put","get","params","err"],"mappings":"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","sourcesContent":["'use strict'\n\nimport axios from 'axios'\n// import qs from 'qs'\nconst qbaseUrl = 'http://admin.qiandengli.com';\nlet token = window.localStorage.getItem('token') || ''\n\naxios.defaults.headers.common['Authorization'] =`Bearer ${token}`;\naxios.interceptors.request.use(config => {\n  // loading\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => {\n  return response\n}, error => {\n  return Promise.resolve(error.response)\n})\n\nfunction checkStatus (response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  \n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    \n    return response\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  } else {\n    alert(response.message)\n\n    return;\n  }\n \n  // 异常状态下，把错误信息返回去\n  // return {\n  //   status: -404,\n  //   msg: '网络异常'\n  // }\n}\n\nfunction checkCode (res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {\n    this.$message(res.msg);\n  }\n  \n  // if (res.data && (!res.data.success)) {\n  //   alert(res.data.error_msg)\n  // }\n  return res.data\n}\n\nexport default {\n  post (url, data) {\n    return axios({\n      method: 'post',\n      baseURL: `${qbaseUrl}`,\n      url,\n      data: data,\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json;charset=UTF-8'\n      }\n    }).then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).catch(\n      (res) => {\n        return checkCode(res)\n      }\n    )\n  },\n  put (url, data) {\n    return axios({\n      method: 'put',\n      baseURL: `${qbaseUrl}`,\n      url,\n      data: data,\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json;charset=UTF-8'\n      }\n    }).then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).catch(\n      (res) => {\n        return checkCode(res)\n      }\n    )\n  },\n  get(url, params) {\n    \n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params\n        }).then(res => {\n            resolve(res.data);\n        }).catch(err => {\n            reject(err.data)\n        })\n      \n    });\n  }\n \n}\n"]}]}