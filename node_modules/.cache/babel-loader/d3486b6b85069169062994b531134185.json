{"remainingRequest":"/Users/edz/Desktop/homeX/ShopOA/node_modules/babel-loader/lib/index.js!/Users/edz/Desktop/homeX/ShopOA/node_modules/eslint-loader/index.js??ref--13-0!/Users/edz/Desktop/homeX/ShopOA/src/axios.config.js","dependencies":[{"path":"/Users/edz/Desktop/homeX/ShopOA/src/axios.config.js","mtime":1561016222632},{"path":"/Users/edz/Desktop/homeX/ShopOA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edz/Desktop/homeX/ShopOA/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/edz/Desktop/homeX/ShopOA/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["module.exports = {\n  // baseUrl  type:{string} default:'/'\n  // 将部署应用程序的基本URL\n  // 将部署应用程序的基本URL。\n  // 默认情况下，Vue CLI假设您的应用程序将部署在域的根目录下。\n  // https://www.my-app.com/。如果应用程序部署在子路径上，则需要使用此选项指定子路径。例如，如果您的应用程序部署在https://www.foobar.com/my-app/，集baseUrl到'/my-app/'.\n  baseUrl: process.env.NODE_ENV === 'production' ? '/online/' : '/',\n  // outputDir: 在npm run build时 生成文件的目录 type:string, default:'dist'\n  // outputDir: 'dist',\n  // pages:{ type:Object,Default:undfind }\n\n  /*\n    构建多页面模式的应用程序.每个“页面”都应该有一个相应的JavaScript条目文件。该值应该是一\n    个对象，其中键是条目的名称，而该值要么是指定其条目、模板和文件名的对象，要么是指定其条目\n    的字符串，\n    注意：请保证pages里配置的路径和文件名 在你的文档目录都存在 否则启动服务会报错的\n  */\n  // pages: {\n  // index: {\n  // entry for the page\n  // entry: 'src/index/main.js',\n  // the source template\n  // template: 'public/index.html',\n  // output as dist/index.html\n  // filename: 'index.html'\n  // },\n  // when using the entry-only string format,\n  // template is inferred to be `public/subpage.html`\n  // and falls back to `public/index.html` if not found.\n  // Output filename is inferred to be `subpage.html`.\n  // subpage: 'src/subpage/main.js'\n  // },\n  //   lintOnSave：{ type:Boolean default:true } 问你是否使用eslint\n  lintOnSave: true,\n  // productionSourceMap：{ type:Bollean,default:true } 生产源映射\n  // 如果您不需要生产时的源映射，那么将此设置为false可以加速生产构建\n  productionSourceMap: false,\n  // devServer:{type:Object} 3个属性host,port,https\n  // 它支持webPack-dev-server的所有选项\n  devServer: {\n    port: 8080,\n    // 端口号\n    host: 'localhost',\n    https: false,\n    // https:{type:Boolean}\n    open: true,\n    //配置自动启动浏览器\n    // proxy: 'http://localhost:4000' // 配置跨域处理,只有一个代理\n    proxy: {\n      '/api': {\n        target: 'admin.qiandengli.com',\n        // 需要请求的地址\n        changeOrigin: true,\n        // 是否跨域\n        pathRewrite: {\n          '^/api': '/' // 替换target中的请求地址，也就是说，在请求的时候，url用'/proxy'代替'http://ip.taobao.com'\n\n        }\n      }\n    } // 配置多个代理\n\n  }\n};",{"version":3,"sources":["/Users/edz/Desktop/homeX/ShopOA/src/axios.config.js"],"names":["module","exports","baseUrl","process","env","NODE_ENV","lintOnSave","productionSourceMap","devServer","port","host","https","open","proxy","target","changeOrigin","pathRewrite"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB;AACf;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,UAAxC,GAAqD,GAP/C;AASf;AAEA;AAEA;;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,EAAAA,UAAU,EAAE,IArCG;AAsCf;AACA;AACAC,EAAAA,mBAAmB,EAAE,KAxCN;AAyCf;AACA;AAEAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,IADC;AACK;AACZC,IAAAA,IAAI,EAAE,WAFC;AAGPC,IAAAA,KAAK,EAAE,KAHA;AAGO;AACdC,IAAAA,IAAI,EAAE,IAJC;AAIK;AACZ;AACAC,IAAAA,KAAK,EAAE;AACH,cAAQ;AACJC,QAAAA,MAAM,EAAE,sBADJ;AAC8B;AAClCC,QAAAA,YAAY,EAAE,IAFV;AAEiB;AACrBC,QAAAA,WAAW,EAAE;AACT,mBAAS,GADA,CACK;;AADL;AAHT;AADL,KANA,CAeH;;AAfG;AA5CI,CAAjB","sourcesContent":["module.exports = {\n  // baseUrl  type:{string} default:'/'\n  // 将部署应用程序的基本URL\n  // 将部署应用程序的基本URL。\n  // 默认情况下，Vue CLI假设您的应用程序将部署在域的根目录下。\n  // https://www.my-app.com/。如果应用程序部署在子路径上，则需要使用此选项指定子路径。例如，如果您的应用程序部署在https://www.foobar.com/my-app/，集baseUrl到'/my-app/'.\n\n  baseUrl: process.env.NODE_ENV === 'production' ? '/online/' : '/',\n\n  // outputDir: 在npm run build时 生成文件的目录 type:string, default:'dist'\n\n  // outputDir: 'dist',\n\n  // pages:{ type:Object,Default:undfind }\n  /*\n    构建多页面模式的应用程序.每个“页面”都应该有一个相应的JavaScript条目文件。该值应该是一\n    个对象，其中键是条目的名称，而该值要么是指定其条目、模板和文件名的对象，要么是指定其条目\n    的字符串，\n    注意：请保证pages里配置的路径和文件名 在你的文档目录都存在 否则启动服务会报错的\n  */\n  // pages: {\n  // index: {\n  // entry for the page\n  // entry: 'src/index/main.js',\n  // the source template\n  // template: 'public/index.html',\n  // output as dist/index.html\n  // filename: 'index.html'\n  // },\n  // when using the entry-only string format,\n  // template is inferred to be `public/subpage.html`\n  // and falls back to `public/index.html` if not found.\n  // Output filename is inferred to be `subpage.html`.\n  // subpage: 'src/subpage/main.js'\n  // },\n\n  //   lintOnSave：{ type:Boolean default:true } 问你是否使用eslint\n  lintOnSave: true,\n  // productionSourceMap：{ type:Bollean,default:true } 生产源映射\n  // 如果您不需要生产时的源映射，那么将此设置为false可以加速生产构建\n  productionSourceMap: false,\n  // devServer:{type:Object} 3个属性host,port,https\n  // 它支持webPack-dev-server的所有选项\n\n  devServer: {\n      port: 8080, // 端口号\n      host: 'localhost',\n      https: false, // https:{type:Boolean}\n      open: true, //配置自动启动浏览器\n      // proxy: 'http://localhost:4000' // 配置跨域处理,只有一个代理\n      proxy: {\n          '/api': {\n              target: 'admin.qiandengli.com',   // 需要请求的地址\n              changeOrigin: true,  // 是否跨域\n              pathRewrite: {\n                  '^/api': '/'  // 替换target中的请求地址，也就是说，在请求的时候，url用'/proxy'代替'http://ip.taobao.com'\n              }\n          }\n\n      },  // 配置多个代理\n  }\n}\n"]}]}