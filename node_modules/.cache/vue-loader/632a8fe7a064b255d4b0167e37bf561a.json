{"remainingRequest":"/Users/edz/Desktop/homeX/ShopOA/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/edz/Desktop/homeX/ShopOA/src/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/edz/Desktop/homeX/ShopOA/src/components/Home.vue","mtime":1561458411104},{"path":"/Users/edz/Desktop/homeX/ShopOA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edz/Desktop/homeX/ShopOA/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/edz/Desktop/homeX/ShopOA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edz/Desktop/homeX/ShopOA/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapMutations, mapActions, mapState } from 'vuex'\nimport api from '../utils/api'\n\nimport Form from '@/components/HomeForm'\nimport ShopForm from '@/components/HomeShopForm'\nimport Table from '@/components/HomeTable'\nimport ShopTable from '@/components/HomeShopTable'\nimport AddShop from '@/components/AddShop'\nexport default {\n    components:{\n        Form, Table, ShopForm, ShopTable, AddShop\n    },\n    props:{\n       \n        type:{\n            type: String\n        },\n        defaultActive:{\n            type: String\n        }\n      \n\n    },\n    data(){\n        return{\n            formLabelWidth:'10px',\n            form:{\n                classification: '0'\n            },\n            editForm: {\n                type:'1'\n            },\n            title:'home',\n            isCollapse: false,\n            breadcrumbItem: '',\n            isShowItem: true,\n            dialogFormVisible: false,\n            editdialogFormVisible: false,\n            addShop:false,\n            loading: true,\n            titles:[\n                    {id:-2, label:'全部商品',value:'' },\n                    {id:2, label:'已上架'  ,value:0},\n                    {id:3, label:'未上架'  ,value:1},\n                    {id:-1, label:'已删除'  ,value:2},\n                    // {id:0, label:'待审核'  ,value:0},\n                    // {id:1, label:'审核成功',value:3},\n                    // {id:4, label:'审核失败',value:4}\n                ],\n            addID: 0,\n            newForm:{\n                    status: '',\n                    title: '',\n                    presale: 0,\n                    product_num: '',\n                    is_supply: 0,\n                    is_open_intergal: 0\n            },\n            parentID: 0,\n            isShowSelect: true\n\n        }\n    },\n    computed:{\n        ...mapState([\n            'isLoading','categoryList', 'shopList', 'selectItems'\n        ]),\n        lists(state){\n            return state.categoryList\n        }\n    },\n    methods:{\n        ...mapMutations([\n            'GET_C_LIST', 'GET_SHOP_LIST'\n        ]),\n      handleOpen(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      handleClose(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      changeCollapse(){\n          this.isCollapse = !this.isCollapse;\n        \n      },\n      handleCheckAllChange(){\n\n      },\n      selectCallback(k,p){\n          \n          if (k === '1-1') {\n\n            this.breadcrumbItem = '商品分类'\n            this.isShowItem = true\n            this.getCategoryList();\n            this.$router.push({\n                path:'/home',\n            })\n        }else if (k === '1-2'){\n\n            this.breadcrumbItem = '商品'\n            this.isShowItem = false\n            this.getShopLists(k=0)\n            this.$router.push({\n                path:'/shopList',\n            })\n        } \n          \n      },\n      onSelect(e){\n          console.log(e);\n          \n          this.editForm = {\n              tag:'',\n              type: e\n          }\n      },\n        monSubmit(e){\n\n            this.$store.commit('changeState',e)\n            this.getShopLists();\n        },\n        onAddClass(){\n            this.dialogFormVisible = !this.dialogFormVisible;\n            this.parentID = 0\n            this.newForm  = {\n                tags: []\n            }\n        },\n        onChangeStatue(){\n            console.log(1111);\n            \n             this.postBetchStatus(this.callBack)\n        },\n        editClass(e){\n           \n            this.dialogFormVisible = !this.dialogFormVisible;\n             this.newForm = {\n                parent_id: parseInt(e.parent_id),\n                title: e.title,\n                sort: e.sort,\n                tags: JSON.parse(e.para)\n            }\n            this.parentID = parseInt(e.id)\n            this.isShowSelect = parseInt(e.parent_id) !=0\n\n        },\n        addNewChildren(e){\n\n            this.dialogFormVisible = !this.dialogFormVisible;\n            this.newForm = {\n                parent_id: parseInt(e.val.id),\n                title: e.val.title,\n                sort: e.val.sort,\n                tags: JSON.parse(e.val.para)\n            }\n            this.parentID = parseInt(e.id)\n\n        },\n        change(e){\n            this.newForm.parent_id = e.id\n            this.newForm.title = e.title\n        },\n        onPLEdit(e){\n           \n           let msg = ''\n           if (this.selectItems.length) {\n               if (e === 'down') {  // 下架\n                   this.$store.state.betchStatus = {\n                       ids:this.selectItems,\n                       status:3\n                   }\n                   msg = '批量下架'\n\n                    this.$confirm(`此操作将${msg}, 是否继续?`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning',\n                center: true\n                }).then(() => {\n                   this.postBetchStatus(this.callBack)\n                   \n                }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                });\n                });\n               } else if (e === 'up') { // 上架\n                    this.$store.state.betchStatus = {\n                       ids:this.selectItems,\n                       status:2\n                   }\n                   msg = '批量上架'\n                    this.$confirm(`此操作将${msg}, 是否继续?`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning',\n                center: true\n                }).then(() => {\n                   this.postBetchStatus(this.callBack)\n                   \n                }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                });\n                });\n               } else if ( e === 'edit') {  // 编辑标签\n                    this.editdialogFormVisible = !this.editdialogFormVisible\n                    \n               } else { // 删除\n                    this.$store.state.betchStatus = {\n                       ids:this.selectItems,\n                       status:-1\n                   }\n                   msg = '批量删除'\n                    this.$confirm(`此操作将${msg}, 是否继续?`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning',\n                center: true\n                }).then(() => {\n                   this.postBetchStatus(this.callBack)\n                   \n                }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                });\n                });\n               }\n               \n           } else {\n               this.$message({\n                    message: '请选择您要操作的数据！',\n                    type: 'warning'\n                });\n           }\n        },\n        onEditToast(){\n             this.editdialogFormVisible = !this.editdialogFormVisible\n             this.editForm.ids = this.selectItems\n             this.$store.state.editForm = this.editForm\n             this.postBetchTag(this.callBack)\n        },\n        callBack(e){\n\n            if (e === 200) {\n                this.$message({\n                    type: 'success',\n                    message: `操作成功！`\n                });\n            } else {\n                this.$message({\n                    type: 'error',\n                    message: `操作失败！`\n                });\n            }\n            this.getShopLists();\n        },\n        onEditClass(e){\n\n            if (e.type === 'add') {\n                this.addID = 0\n                if (e.val) {\n                    this.newForm.parent_id = parseInt(e.id)\n                    this.newForm.title = e.val.val.title\n                    this.newForm.sort = e.val.val.sort\n                    this.newForm.tags = e.val.val.tags\n                }else{\n                    this.newForm.parent_id = 0\n                }\n                \n            } else {\n                this.addID = parseInt(e.id) ? parseInt(e.id) : parseInt(e.val.val.id)\n                this.newForm.parent_id = parseInt(e.id) ? parseInt(e.id) : 0\n                this.newForm.title = e.val.val.title||''\n                this.newForm.sort = e.val.val.sort\n                this.newForm.tags = JSON.parse(e.val.val.para)\n            }\n            this.dialogFormVisible = !this.dialogFormVisible;\n            \n        },\n        cancelNewClass(){\n            this.dialogFormVisible = !this.dialogFormVisible; \n        },\n        onOk(){\n            this.dialogFormVisible = false;\n        },\n        ...mapActions([\n            'getCategoryList', 'getShopLists', 'postBetchStatus', 'postBetchTag'\n        ])\n    },\n    created(k){\n         \n        if(this.type === 'addShop') {\n            this.addShop = true\n        } else {\n            this.addShop = false\n        }\n        if (this.defaultActive === '1-1') {\n            this.breadcrumbItem = '商品分类'\n            this.isShowItem = true\n            this.getCategoryList();\n        }else if (this.defaultActive === '1-2'){\n            this.breadcrumbItem = '商品'\n            this.getShopLists();\n            this.isShowItem = false\n            this.getCategoryList();\n        }\n    }\n\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"home-ctn\">\n        \n        <el-menu :default-active=\"defaultActive\" class=\"el-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\" :collapse=\"isCollapse\" @select = 'selectCallback' background-color = '#304156' text-color = '#fff'>\n        <el-submenu index=\"1\">\n            <template slot=\"title\">\n            <i class=\"el-icon-goods\"></i>\n            <span slot=\"title\">商品</span>\n            </template>\n             <el-menu-item-group>\n                <el-menu-item index=\"1-1\">商品分类</el-menu-item>\n            </el-menu-item-group>\n            <el-menu-item-group>\n                <el-menu-item index=\"1-2\">商品列表</el-menu-item>\n            </el-menu-item-group>\n        </el-submenu>\n\n        <el-submenu index=\"2\">\n            <template slot=\"title\">\n            <i class=\"el-icon-bell\"></i>\n            <span slot=\"title\">活动</span>\n            </template>\n             <el-menu-item-group>\n                <el-menu-item index=\"2-1\">活动列表</el-menu-item>\n            </el-menu-item-group>\n        </el-submenu>\n\n        </el-menu>\n        <div class=\"left-ctn\">\n            <el-card class=\"box-card box-card-one\">\n                <div class=\"l-top-wrap\">\n                    <transition>\n                        <el-button :class=\"[isCollapse?'fa fa-arrow-down go':'fa fa-arrow-down aa']\" class=\"rotate-ctn\" @click=\"changeCollapse\" type=\"primary\" icon=\"el-icon-sort\"></el-button>\n                    </transition>\n                    <el-breadcrumb separator=\"/\">\n                        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n                        <el-breadcrumb-item>{{breadcrumbItem}}</el-breadcrumb-item>\n                    </el-breadcrumb>\n                    <el-dropdown>\n                        <span class=\"el-dropdown-link\">\n                            用户名称<i class=\"el-icon-arrow-down el-icon--right\"></i>\n                        </span>\n                        <el-dropdown-menu slot=\"dropdown\">\n                            <el-dropdown-item>版本：企业版</el-dropdown-item>\n                            <el-dropdown-item>修改密码</el-dropdown-item>\n                            <el-dropdown-item>退出登录</el-dropdown-item>\n                        </el-dropdown-menu>\n                    </el-dropdown>\n                </div>\n                 <div v-if=\"addShop\">\n                     <AddShop></AddShop>\n                </div>\n                <div v-else>\n                    <Form :isShowSelect = 'isShowSelect' :parentID = 'parentID' :newForm = 'newForm' @change = 'change' @cancelNewClass = 'cancelNewClass' :addID = 'addID' @getCategoryList = 'getCategoryList' :categoryList = 'categoryList'  v-if=\"isShowItem\" :form = 'form' @addNewClass = 'onAddClass' :dialogFormVisible = 'dialogFormVisible' @onOk = 'onOk'></Form>\n                    <ShopForm :categoryList = 'categoryList' :newForm = 'newForm' v-else @onSubmit = 'monSubmit' :form = 'form'></ShopForm>\n                    <el-card class=\"box-card box-card-list\">\n                        <div slot=\"header\" class=\"clearfix\">\n                            <span>{{breadcrumbItem}}列表</span>\n                            <div v-if=\"!isShowItem\" class=\"btn-wrap\">\n                                <el-button @click=\"onPLEdit('down')\" type=\"primary\" size = 'mini'>批量下架</el-button>\n                                <el-button @click=\"onPLEdit('up')\" type=\"primary\" size = 'mini'>批量上架</el-button>\n                                <el-button @click=\"onPLEdit('edit')\" type=\"primary\" size = 'mini'>编辑标签</el-button>\n                                <el-button @click=\"onPLEdit('del')\" type=\"danger\" size = 'mini'>批量删除</el-button>\n                            </div>\n                        </div>\n                        <Table @addNewChildren = 'addNewChildren' :loading = 'loading' v-if=\"isShowItem\" :lists = 'categoryList' @addNewClass = 'onEditClass' @editClass = 'editClass'></Table>\n                        <ShopTable @onChangeStatue = 'onChangeStatue' @getShopLists = 'getShopLists' v-else :lists = 'shopList' :titles = 'titles'></ShopTable>\n                    </el-card>\n                </div>\n                <el-dialog title=\"编辑标签\" :visible.sync=\"editdialogFormVisible\">\n                    <el-form :model=\"editForm\">\n                        <el-form-item label=\"\" :label-width=\"formLabelWidth\">\n                            <el-radio @change = 'onSelect' v-model=\"editForm.type\" label=\"1\">选择标签</el-radio>\n                            <el-radio @change = 'onSelect' v-model=\"editForm.type\" label=\"2\">新增标签</el-radio>\n                        </el-form-item>\n                        <el-form-item label=\"\" :label-width=\"formLabelWidth\">\n                        <el-select v-if=\"editForm.type =='1'\" v-model=\"editForm.tag\" placeholder=\"请选择\">\n                            <el-option label=\"全部\" value=\"0\"></el-option>\n                            <el-option v-for=\"item in categoryList\" :label=\"item.title\" :value=\"item.title\" :key=\"item.id\"></el-option>\n                        </el-select>\n                         <el-input v-else  placeholder=\"请输入\"  v-model=\"editForm.tag\"  clearable></el-input>\n                        </el-form-item>\n                    </el-form>\n                    <div slot=\"footer\" class=\"dialog-footer\">\n                        <el-button @click=\"editdialogFormVisible = false\">取 消</el-button>\n                        <el-button type=\"primary\" @click=\"onEditToast\">确 定</el-button>\n                    </div>\n                </el-dialog>\n                \n            </el-card>\n            \n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapMutations, mapActions, mapState } from 'vuex'\nimport api from '../utils/api'\n\nimport Form from '@/components/HomeForm'\nimport ShopForm from '@/components/HomeShopForm'\nimport Table from '@/components/HomeTable'\nimport ShopTable from '@/components/HomeShopTable'\nimport AddShop from '@/components/AddShop'\nexport default {\n    components:{\n        Form, Table, ShopForm, ShopTable, AddShop\n    },\n    props:{\n       \n        type:{\n            type: String\n        },\n        defaultActive:{\n            type: String\n        }\n      \n\n    },\n    data(){\n        return{\n            formLabelWidth:'10px',\n            form:{\n                classification: '0'\n            },\n            editForm: {\n                type:'1'\n            },\n            title:'home',\n            isCollapse: false,\n            breadcrumbItem: '',\n            isShowItem: true,\n            dialogFormVisible: false,\n            editdialogFormVisible: false,\n            addShop:false,\n            loading: true,\n            titles:[\n                    {id:-2, label:'全部商品',value:'' },\n                    {id:2, label:'已上架'  ,value:0},\n                    {id:3, label:'未上架'  ,value:1},\n                    {id:-1, label:'已删除'  ,value:2},\n                    // {id:0, label:'待审核'  ,value:0},\n                    // {id:1, label:'审核成功',value:3},\n                    // {id:4, label:'审核失败',value:4}\n                ],\n            addID: 0,\n            newForm:{\n                    status: '',\n                    title: '',\n                    presale: 0,\n                    product_num: '',\n                    is_supply: 0,\n                    is_open_intergal: 0\n            },\n            parentID: 0,\n            isShowSelect: true\n\n        }\n    },\n    computed:{\n        ...mapState([\n            'isLoading','categoryList', 'shopList', 'selectItems'\n        ]),\n        lists(state){\n            return state.categoryList\n        }\n    },\n    methods:{\n        ...mapMutations([\n            'GET_C_LIST', 'GET_SHOP_LIST'\n        ]),\n      handleOpen(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      handleClose(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      changeCollapse(){\n          this.isCollapse = !this.isCollapse;\n        \n      },\n      handleCheckAllChange(){\n\n      },\n      selectCallback(k,p){\n          \n          if (k === '1-1') {\n\n            this.breadcrumbItem = '商品分类'\n            this.isShowItem = true\n            this.getCategoryList();\n            this.$router.push({\n                path:'/home',\n            })\n        }else if (k === '1-2'){\n\n            this.breadcrumbItem = '商品'\n            this.isShowItem = false\n            this.getShopLists(k=0)\n            this.$router.push({\n                path:'/shopList',\n            })\n        } \n          \n      },\n      onSelect(e){\n          console.log(e);\n          \n          this.editForm = {\n              tag:'',\n              type: e\n          }\n      },\n        monSubmit(e){\n\n            this.$store.commit('changeState',e)\n            this.getShopLists();\n        },\n        onAddClass(){\n            this.dialogFormVisible = !this.dialogFormVisible;\n            this.parentID = 0\n            this.newForm  = {\n                tags: []\n            }\n        },\n        onChangeStatue(){\n            console.log(1111);\n            \n             this.postBetchStatus(this.callBack)\n        },\n        editClass(e){\n           \n            this.dialogFormVisible = !this.dialogFormVisible;\n             this.newForm = {\n                parent_id: parseInt(e.parent_id),\n                title: e.title,\n                sort: e.sort,\n                tags: JSON.parse(e.para)\n            }\n            this.parentID = parseInt(e.id)\n            this.isShowSelect = parseInt(e.parent_id) !=0\n\n        },\n        addNewChildren(e){\n\n            this.dialogFormVisible = !this.dialogFormVisible;\n            this.newForm = {\n                parent_id: parseInt(e.val.id),\n                title: e.val.title,\n                sort: e.val.sort,\n                tags: JSON.parse(e.val.para)\n            }\n            this.parentID = parseInt(e.id)\n\n        },\n        change(e){\n            this.newForm.parent_id = e.id\n            this.newForm.title = e.title\n        },\n        onPLEdit(e){\n           \n           let msg = ''\n           if (this.selectItems.length) {\n               if (e === 'down') {  // 下架\n                   this.$store.state.betchStatus = {\n                       ids:this.selectItems,\n                       status:3\n                   }\n                   msg = '批量下架'\n\n                    this.$confirm(`此操作将${msg}, 是否继续?`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning',\n                center: true\n                }).then(() => {\n                   this.postBetchStatus(this.callBack)\n                   \n                }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                });\n                });\n               } else if (e === 'up') { // 上架\n                    this.$store.state.betchStatus = {\n                       ids:this.selectItems,\n                       status:2\n                   }\n                   msg = '批量上架'\n                    this.$confirm(`此操作将${msg}, 是否继续?`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning',\n                center: true\n                }).then(() => {\n                   this.postBetchStatus(this.callBack)\n                   \n                }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                });\n                });\n               } else if ( e === 'edit') {  // 编辑标签\n                    this.editdialogFormVisible = !this.editdialogFormVisible\n                    \n               } else { // 删除\n                    this.$store.state.betchStatus = {\n                       ids:this.selectItems,\n                       status:-1\n                   }\n                   msg = '批量删除'\n                    this.$confirm(`此操作将${msg}, 是否继续?`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning',\n                center: true\n                }).then(() => {\n                   this.postBetchStatus(this.callBack)\n                   \n                }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                });\n                });\n               }\n               \n           } else {\n               this.$message({\n                    message: '请选择您要操作的数据！',\n                    type: 'warning'\n                });\n           }\n        },\n        onEditToast(){\n             this.editdialogFormVisible = !this.editdialogFormVisible\n             this.editForm.ids = this.selectItems\n             this.$store.state.editForm = this.editForm\n             this.postBetchTag(this.callBack)\n        },\n        callBack(e){\n\n            if (e === 200) {\n                this.$message({\n                    type: 'success',\n                    message: `操作成功！`\n                });\n            } else {\n                this.$message({\n                    type: 'error',\n                    message: `操作失败！`\n                });\n            }\n            this.getShopLists();\n        },\n        onEditClass(e){\n\n            if (e.type === 'add') {\n                this.addID = 0\n                if (e.val) {\n                    this.newForm.parent_id = parseInt(e.id)\n                    this.newForm.title = e.val.val.title\n                    this.newForm.sort = e.val.val.sort\n                    this.newForm.tags = e.val.val.tags\n                }else{\n                    this.newForm.parent_id = 0\n                }\n                \n            } else {\n                this.addID = parseInt(e.id) ? parseInt(e.id) : parseInt(e.val.val.id)\n                this.newForm.parent_id = parseInt(e.id) ? parseInt(e.id) : 0\n                this.newForm.title = e.val.val.title||''\n                this.newForm.sort = e.val.val.sort\n                this.newForm.tags = JSON.parse(e.val.val.para)\n            }\n            this.dialogFormVisible = !this.dialogFormVisible;\n            \n        },\n        cancelNewClass(){\n            this.dialogFormVisible = !this.dialogFormVisible; \n        },\n        onOk(){\n            this.dialogFormVisible = false;\n        },\n        ...mapActions([\n            'getCategoryList', 'getShopLists', 'postBetchStatus', 'postBetchTag'\n        ])\n    },\n    created(k){\n         \n        if(this.type === 'addShop') {\n            this.addShop = true\n        } else {\n            this.addShop = false\n        }\n        if (this.defaultActive === '1-1') {\n            this.breadcrumbItem = '商品分类'\n            this.isShowItem = true\n            this.getCategoryList();\n        }else if (this.defaultActive === '1-2'){\n            this.breadcrumbItem = '商品'\n            this.getShopLists();\n            this.isShowItem = false\n            this.getCategoryList();\n        }\n    }\n\n}\n</script>\n<style>\n.home-ctn {\n    width: 100%;\n    height: 100%;\n    background-color:#fff;\n    display: flex;\n}\n.el-menu-vertical-demo:not(.el-menu--collapse) {\n    width: 200px;\n    min-height: 400px;\n  }\n.left-ctn {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n.l-top-wrap {\n    height: 50px;\n    background-color: #fff;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid #e6e6e6;\n}\n.l-top-wrap .el-button--primary{\n    height: 50px;\n    background: none;\n    border: none;\n    width: 50px;\n    color: #304156;\n}\n.aa{\n    transition: all 1s; \n    transform:rotate(90deg);\n}\n.go{\n    transform:rotate(0deg);\n    transition: all 1s;\n}\n.l-top-wrap .el-breadcrumb {\n    margin-left: 20px;\n}\n.l-top-wrap .el-dropdown {\n    position: absolute;\n    right: 30px;\n}\n.box-card-list{\n    margin-top: 15px;\n}\n.left-ctn .box-card-one {\n    height: 100%;\n}\n.left-ctn .clearfix {\n    justify-content: flex-start;\n}\n.btn-wrap {\n    margin-left: 20px;\n}\n</style>\n\n"]}]}